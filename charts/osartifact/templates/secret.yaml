{{ $tokenSecret := (lookup "v1" "Secret" .Release.Namespace .Values.tokenSecret.name) }}
{{ $passwordSecret := (lookup "v1" "Secret" .Release.Namespace .Values.passwordSecret.name) }}

{{- if and $tokenSecret $passwordSecret }}

{{ $token := index $tokenSecret.data .Values.tokenSecret.key | b64dec }}
{{ $password := index $passwordSecret.data .Values.passwordSecret.key | b64dec }}
{{ $dockerUserPassword := "" }}

{{- if .Values.exporter.passwordSecret.name }}
  {{ $dockerUserPasswordSecret := (lookup "v1" "Secret" .Release.Namespace .Values.exporter.passwordSecret.name )}}
  {{ $dockerUserPassword = index $dockerUserPasswordSecret.data .Values.exporter.passwordSecret.key | b64dec }}
{{- end }}

kind: Secret
apiVersion: v1
metadata:
  name: {{ include "osartifact.fullname" . }}-config
  namespace: {{ .Release.Namespace }}
stringData:
  cloud-config.yaml: |
    #cloud-config
    hostname: plural-edge-{{ `{{ trunc 10 .MachineID }}` }}

    users:
      - name: kairos
        lock_passwd: true
      - name: {{ .Values.username }}
        passwd: {{ $password }}
        {{- with .Values.defaultUser }}
        groups: [
         {{- range .groups -}}
          {{- if eq . ($.Values.defaultUser.groups | last) -}}
          "{{ . }}"
          {{- else -}}
          "{{ . }}",
          {{- end -}}
         {{- end -}}
        ]
        {{- if .ssh_authorized_keys}}
        ssh_authorized_keys:
        {{- .ssh_authorized_keys | toYaml | nindent 10 }}
        {{- end }}
        {{- end }}
      {{- if .Values.extraUserCloudConfig }}
      {{- .Values.extraUserCloudConfig | toYaml | nindent 6 }}
      {{- end }}

    write_files:
      - path: /etc/rancher/k3s/registries.yaml
        permissions: "0644"
        content: |
          mirrors:
            "*":
      - path: /etc/plural-id
        permissions: "0644"
        content: |
          {{ uuidv4 }}

    k3s:
      enabled: true
      replace_args: true
      args:
        - --node-name={{ .Values.nodeName }}
        - --embedded-registry
        - --disable=traefik,servicelb

    bundles:
      {{- range $key, $value := .Values.defaultBundles }}
      - targets:
          - run:///{{ $key }}.tar
        local_file: true
      {{- end }}
      {{- range $key, $value := .Values.bundles }}
      - targets:
          - run:///{{ $key }}.tar
        local_file: true
      {{- end }}
      {{- range $key, $value := .Values.extraBundles }}
      - targets:
          - run:///{{ $key }}.tar
        local_file: true
      {{- end }}

    plural:
      token: {{ $token }}
      url: {{ .Values.url }}

    {{- if .Values.extraUserCloudConfig }}
    {{ .Values.extraCloudConfig | toYaml | nindent 4 }}
    {{- end }}

  {{- if $dockerUserPassword }}
  config.json: |
    {
      "auths": {
        "{{ .Values.exporter.registry }}": {
          "auth": {{ printf "%s:%s" .Values.exporter.registry.username $dockerUserPassword | b64enc | quote }}
        }
      }
    }
  {{- end }}
{{- end}}